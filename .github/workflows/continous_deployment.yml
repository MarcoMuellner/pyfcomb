name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PYTHON_VERSIONS: '3.8 3.9 3.10 3.11 3.12'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
        include:
          - os: windows-latest
            target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - name: Generate Dynamic Version
        run: echo "DYNAMIC_VERSION=0.4.9.dev$(date +%s)" >> $GITHUB_ENV
      - name: Set Versions in Cargo.toml and pyproject.toml
        run: |
          sed -i "s/^version = .*/version = \"$DYNAMIC_VERSION\"/" Cargo.toml
          sed -i "s/^version = .*/version = \"$DYNAMIC_VERSION\"/" pyproject.toml
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Maturin
        run: pip install maturin
      - name: Build Wheels
        run: |
          for pyver in $PYTHON_VERSIONS; do
            maturin build --release --out dist --interpreter python$pyver --target ${{ matrix.target }}
          done
      - name: Upload Wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  release:
    runs-on: ubuntu-latest
    needs: build
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels-${{ matrix.os }}
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
